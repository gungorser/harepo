automation:
  - id: cover_schedule
    alias: cover_schedule
    description: ""
    triggers:
      - trigger: sun
        event: sunset
        offset: 0
        id: sunset
      - trigger: sun
        event: sunrise
        offset: 0
        id: sunrise
      - trigger: calendar
        entity_id: calendar.sercan
        event: end
        offset: "0:0:0"
        id: event_end
      - trigger: calendar
        entity_id: calendar.melike
        event: end
        offset: "0:0:0"
        id: event_end
      - trigger: calendar
        entity_id: calendar.misafir
        event: end
        offset: "0:0:0"
        id: event_end
    conditions: []
    actions:
      - choose:
          - conditions:
              - condition: trigger
                id:
                  - event_end
            sequence:
              - action: calendar.get_events
                target:
                  entity_id: >-
                    {{ states.calendar | map(attribute='entity_id') | list }}
                data:
                  start_date_time: >
                    {% set next_rising = as_datetime(state_attr('sun.sun', 'next_rising')) %}
                    {{next_rising - timedelta(days=1) }}
                  duration:
                    hours: 0
                    minutes: 0
                    seconds: 1
                response_variable: sunrise_events
              - action: cover.open_cover
                metadata: {}
                data: {}
                target: "{{ {'area_id': sunrise_events.values()
                  | map(attribute='events')
                  | sum(start=[])
                  | map(attribute='description')
                  | map('from_json')
                  | map(attribute='room_name')
                  | select('eq', (trigger.calendar_event.description | from_json).room_name)
                  | map('area_id')
                  | unique | list} }}"
          - conditions:
              - condition: trigger
                id:
                  - sunset
            sequence:
              - action: cover.close_cover
                metadata: {}
                data: {}
                target: "{{ {'area_id': areas() | list} }}"
          - conditions:
              - condition: trigger
                id:
                  - sunrise
            sequence:
              - action: calendar.get_events
                target:
                  entity_id: >-
                    {{ states.calendar | map(attribute='entity_id') | list }}
                data:
                  start_date_time: "{{ now() }}"
                  duration:
                    hours: 0
                    minutes: 0
                    seconds: 1
                response_variable: sunrise_events
              - variables:
                  sleep_room: >
                    {{ areas()
                        | reject("in", sunrise_events.values()  
                          | map(attribute='events') 
                          | sum(start=[]) 
                          | map(attribute='description')
                          | map('from_json')
                          | map(attribute='room_name')
                          | map('area_id')
                          | unique | list)
                        | list }}
      - delay: 120

    mode: queued
