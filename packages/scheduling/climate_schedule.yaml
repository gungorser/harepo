automation:
  - id: climate_schedule
    alias: climate_schedule
    description: ""
    triggers:
      - trigger: calendar
        entity_id: calendar.sercan
        event: start
        offset: "0:0:0"
      - trigger: calendar
        entity_id: calendar.sercan
        event: start
        offset: "+0:30:0"
      - trigger: calendar
        entity_id: calendar.sercan
        event: end
        offset: "0:0:0"
      - trigger: calendar
        entity_id: calendar.sercan
        event: end
        offset: "-0:30:0"
      - trigger: calendar
        entity_id: calendar.melike
        event: start
        offset: "0:0:0"
      - trigger: calendar
        entity_id: calendar.melike
        event: start
        offset: "+0:30:0"
      - trigger: calendar
        entity_id: calendar.melike
        event: end
        offset: "0:0:0"
      - trigger: calendar
        entity_id: calendar.melike
        event: end
        offset: "-0:30:0"
      - trigger: calendar
        entity_id: calendar.misafir
        event: start
        offset: "0:0:0"
      - trigger: calendar
        entity_id: calendar.misafir
        event: start
        offset: "+0:30:0"
      - trigger: calendar
        entity_id: calendar.misafir
        event: end
        offset: "0:0:0"
      - trigger: calendar
        entity_id: calendar.misafir
        event: end
        offset: "-0:30:0"
    conditions: []
    actions:
      - variables:
          event_time: >-
            {% if trigger.event == 'start' %}
              {% set start_no_offset = trigger.calendar_event.start %}
            {% else %}
              {% set start_no_offset = trigger.calendar_event.end %}
            {% endif %}
            {{ as_local(as_datetime(start_no_offset)) + trigger.offset }}
      - action: calendar.get_events
        target:
          entity_id: >-
            {{ states.calendar | map(attribute='entity_id') | list }}
        data:
          start_date_time: "{{ event_time }}"
          duration:
            hours: 0
            minutes: 0
            seconds: 1
        response_variable: active_events
      - variables:
          room_id: >
            {{ area_id((trigger.calendar_event.description | from_json)['room_name']) }}
          room_temps: >-
            {% set all_events = active_events.values() | map(attribute='events') | sum(start=[]) | list %}
            {% set ns = namespace(temps=[]) %}
            {% for event in all_events %}
              {% set desc = event.description | from_json %}
              {% if area_id(desc['room_name']) == room_id %}
                {% if 'sleep_temp' in desc 
                      and as_timestamp(event.start) + timedelta(seconds=1800) <= as_timestamp(event_time) 
                      and as_timestamp(event.end) - timedelta(seconds=1800) > as_timestamp(event_time) %}
                  {% set ns.temps = ns.temps + [ desc['sleep_temp'] ] %}
                {% elif   as_timestamp(event.start) <= as_timestamp(event_time) 
                      and as_timestamp(event.end) > as_timestamp(event_time) %}
                  {% set ns.temps = ns.temps + [desc['temp']] %}
                {% endif %}
              {% endif %}
            {% endfor %}
            {{ ns.temps }}
      - action: climate.set_temperature
        data:
          temperature: "{{ (room_temps | max) if room_temps else 7 }}"
          hvac_mode: "{{ 'heat' if room_temps else 'off' }}"
        target:
          area_id: "{{ room_id }}"
    mode: queued
