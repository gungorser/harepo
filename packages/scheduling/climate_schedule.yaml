automation:
  - id: climate_schedule
    alias: climate_schedule
    description: ""
    triggers:
      - trigger: calendar
        entity_id: calendar.sercan
        event: start
        offset: "-0:30:0"
        id: event_start
      - trigger: calendar
        entity_id: calendar.melike
        event: start
        offset: "-0:30:0"
        id: event_start
      - trigger: calendar
        entity_id: calendar.sercan
        event: end
        offset: "0:0:0"
        id: event_end
        variables:
          calendar_id: calendar.sercan
      - trigger: calendar
        entity_id: calendar.melike
        event: end
        offset: "-0:0:0"
        id: event_end
        variables:
          calendar_id: calendar.melike
    conditions: []
    actions:
      - choose:
          - conditions:
              - condition: trigger
                id:
                  - event_start
            sequence:
              - action: climate.set_hvac_mode
                metadata: {}
                data:
                  hvac_mode: heat
                target:
                  area_id: "{{ area_id(trigger.calendar_event.description) }}"
          - conditions:
              - condition: trigger
                id:
                  - event_end
            sequence:
              - action: calendar.get_events
                target:
                  entity_id: >-
                    {{ ['calendar.sercan', 'calendar.melike'] 
                          | reject(this.calendar_id) }}
                data:
                  start_date_time: "{{ now() }}"
                  duration:
                    hours: 0
                    minutes: 0
                    seconds: 1
                response_variable: active_events_from_others
              - if:
                  - condition: template
                    value_template: >-
                      {{ active_events_from_others.values() 
                          | map(attribute='events')
                          | sum(start=[])
                          | map(attribute='description')
                          | map('area_id')
                          | select(area_id(trigger.calendar_event.description))
                          | list | count == 0 }}
                then:
                  - action: climate.set_hvac_mode
                    metadata: {}
                    data:
                      hvac_mode: "off"
                    target:
                      area_id: "{{ area_id(trigger.calendar_event.description) }}"
    mode: queued
