automation:
  - id: schedule_automation
    alias: schedule_automation
    description: ""
    triggers:
      - trigger: sun
        event: sunset
        offset: 0
        id: sunset
      - trigger: sun
        event: sunrise
        offset: 0
        id: sunrise
      - trigger: calendar
        entity_id: calendar.sercan
        event: start
        offset: "0:0:0"
        id: event_start
      - trigger: calendar
        entity_id: calendar.melike
        event: start
        offset: "0:0:0"
        id: event_start
      - trigger: calendar
        entity_id: calendar.sercan
        event: end
        offset: "0:0:0"
        id: event_end
      - trigger: calendar
        entity_id: calendar.melike
        event: end
        offset: "-0:0:0"
        id: event_end
    conditions: []
    actions:
      - choose:
          - conditions:
              - condition: trigger
                id:
                  - event_start
            sequence:
              - action: climate.set_hvac_mode
                metadata: {}
                data:
                  hvac_mode: heat
                target:
                  area_id: melike_ofis
          - conditions:
              - condition: trigger
                id:
                  - event_end
            sequence:
              - action: climate.set_hvac_mode
                metadata: {}
                data:
                  hvac_mode: "off"
                target:
                  area_id: "{{ trigger.calendar_event.message }}"
              - action: climate.turn_off
                metadata: {}
                data: {}
                target:
                  area_id: "{{ trigger.calendar_event.message }}"
              - if:
                  - condition: template
                    value_template: >-
                      {% set event_start = as_local(as_datetime(trigger.calendar_event.start_time)) %}  
                      {% set event_end = as_local(as_datetime(trigger.calendar_event.end_time)) %}   
                      {% set sunrise = as_datetime(state_attr('sun.sun', 'next_rising')) - timedelta(days=1) %}   
                      {{ event_start <= sunrise <= event_end }}
                then:
                  - action: cover.open_cover
                    metadata: {}
                    data: {}
                    target:
                      area_id: "{{trigger.calendar_event.message }}"
          - conditions:
              - condition: trigger
                id:
                  - sunset
            sequence:
              - action: cover.close_cover
                metadata: {}
                data: {}
                target: "{{ { 'area_id': areas() | list } }}"
          - conditions:
              - condition: trigger
                id:
                  - sunrise
            sequence:
              - action: cover.open_cover
                metadata: {}
                data: {}
                target: >-
                  {% set calendars = [states.calendar.sercan,states.calendar.melike]%}    
                  {% set ongoing = namespace(messages=[]) %}   
                  {% for cal in calendars %}
                    {% set start = as_local(as_datetime(cal.attributes.start_time)) %}
                    {% if start < now() %}
                      {% set ongoing.messages = ongoing.messages + [cal.attributes.message] %}
                    {% endif %}
                  {% endfor %}    
                  {{ {'area_id':  areas() | reject('in',ongoing.messages) | list } }}
    mode: single
